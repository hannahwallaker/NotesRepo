Database
	- Collection of related data
	- allows for the preservation of data past the lifetime of an application

DBMS
	- Database management systems
		- collection of programs used to create and maintain databases
			- store data in a structured format
			- allows for concurrent use of data
			- control who has access to the data
			- maintain data integrity (consistency and accuracy of the data)
			- data back up and recovery
	- RDBMS
		- Relational Database Management Systems
			- consists of a collection of tables where tables are connected and reference each other
				- Table
					- Columns: Category of data - fields
					- Rows: Particular instance of data category - records (data entities)

SQL
	- Structured Query Language
		- provides a way to interact with data entities
	- SQL implementations
		- different "flavors" of SQL, arising from different vendors and platforms available
			- ie: OracleSQL, MySQL, NoSQL
			- syntax may vary based on the implementation
				- we'll be using PostgreSQL

Important distinction
	- PostgreSQL is RDBMS
	- DBeaver is a tool to easily visualize and interact with database entities

Database schema
	- collection of data objects including tables, views, triggers, functions
	- always belongs to one database
		- a database may have multiple schema

PostgreSQL
	- free and open source
	- Datatypes - https://www.postgresql.org/docs/10/datatype.html
		- Character types
			- CHAR
				- fixed-length, blank padded
			- VARCHAR
				- variable-length, with a limit
			- TEXT
				- variable-length with no limit
		- Numeric types
			- INTEGER
			- DECIMAL
				- for floating point, user specified
		- Temporal types
			- DATE
				- just date, no time
			- TIME
				- just time, no date
			- TIMESTAMP
				- date and time
		- Autoincrementing integer
			- SERIAL

SQL Sublanguages
	- refer to the different types of operations to be performed on database entities
	- for the sake of this training, there will be 5 SQL sublanguages
		- DDL, DCL, DML, DQL, TCL
			- DCL - Data Control Language
				- Manage user permissions within a database
					- define power/access to tables/schema to users
				- GRANT and REVOKE
			- DDL - Data Definition Language
				- Statements that are used to construct/modify/delete  database/scheme/user/tables/properties (Database entities)
					- CREATE
					- ALTER
					- DROP
					- TRUNCATE
						- unlike DROP, just removes records from a database
Constraints
	- limit the type of data entered in tables to ensure accuracy and reliability of the data
		- primary key, combination of not null and unique
		- not null, column cannot have a null value
		- unique, column's value needs to be unique
		- check(condition)
			- ensures that a condition is met
		- references
			- foreign key relationship
				 -identifies another record/row potentially in a different table

Keys
	- primary keys
		- column or a combination of columns which acts as a unique identifier to a record in a table
			- composite keys
				- combinations of columns which act as the primary key
	- foreign keys
		- used to illustrate relations between records
	- candidate keys
		- any columns that can be used to uniquely identify a record in a table

Multiplicity
	- refers to relationships between tables
		- one-to-one
			- exactly one row references another row
			- ie: one SNN per individual
		- one-to-many/many-to-one
			- exactly one row in a table is referenced by potentially many rows in another table
			- ie: one employee has many task but each task can have only one employee
		- many-to-many
			- several rows in one table can reference several rows in another table
			- ie: a task may have many employees and an employee may have many tasks
			- junction table
				- used to work with many-to-many relationships

Domain integrity
	- values must fall within the constraints placed on the columns
	- make sure that the values are "correct"

Referential integrity
	- want the database to be working properly within the constraints of a foreign key relationship
	- don't want records to record to reference another record that does not exist
		- orphaned records
	- delete on cascade to remove references as well

DML
	- Data Manipulation Language
	- statements to perform record level operations
		- to interact with the records stored in tables
	- CRUD 
		- Create/Read/Update/Delete
	- INSERT
		- create operation
		- insert into [table_name]([col1_name], [col2_name]...) values ([col1_value], [col2_value]...); 
			- mockaroo to generate mock-data
				- https://www.mockaroo.com/
	- UPDATE
		- update [table_name] set [col1_name] = [col1_value] where [condition]; 
			- if no where clause is specified, it will update every record in the table
	
	- DELETE
		- delete from [table_name] here [condition]; 
			- if no where clause is specified, it will delete every record in the table

DQL
	- Data Query Language
		- "sub-sub" language/ part of DML
	- Statements used to retrieve information from tables
	- SELECT
		- main operation when querying data that can be filtered using additional clauses
		- Result set can be filtered using: (order matters)
			- where
			- group by
			- having 
			- order by
			- limit