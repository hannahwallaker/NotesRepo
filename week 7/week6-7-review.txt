Hibernate
1.	What is Hibernate? What is JPA?
2.	What is the benefit of using Hibernate over JDBC?
3.	Tell me about some of the JPA annotations you have worked with? What do they do? How do you specify multiplicity relationships with JPA annotations?
4.	What are the interfaces of Hibernate?
5.	Tell me how you set up hibernate? What files are you editing, what goes in them, etc.
6.	What ways are available to you to map an object to database entities in Hibernate?
7.	In the session interface, what is the difference between save and persist methods? get and load methods? Update vs merge methods?
8.	What are the different session methods?
9.	What is the difference between Eager and Lazy fetching and how to setup either?
10.	Under what circumstances would your program throw a LazyInitializationException?
11.	What are the 4 ways to make a query using Hibernate?
12.	What is HQL? What makes it different from SQL?
13.	What is the Criteria API? Can you perform all DDL and DML commands with it? How do Restrictions and Projections work within this API?
14.	What is caching? What is the difference between L1 and L2 cache?
15.	How do you enable second level caching?
16.	Tell me about NamedQueries.
17.	Can you write native SQL with Hibernate? Is this a good idea?
18.	What are the configuration options for Hibernate?
	1.	How to specify the SQL dialect?
	2.	What data must be specified for the SessionFactory?
	3.	What is hbm2ddl?
	4.	How would you configure Hibernate to print to the console all SQL statements run?
19.	What are the different object states in Hibernate? What methods move objects to different states?
20.	What is a proxy? When does the proxy resolve to the real object?
21.	What are the properties of a transaction? (ACID)

REST
12.	What does the acronym REST stand for? What makes a service “RESTful”?
19.	What protocols and data format do REST services use?
20.	What are the architectural constraints of REST?
21.	Explain the levels of the Richardson Maturity Model
22.	Explain the HATEOAS concept
23.	What is a “resource” in a REST service?
24.	What does the “uniform interface” constraint mean? Give an example of some RESTful endpoints you would create for an API. Should the URLs contain nouns, verbs, or adjectives?
25.	How would you implement authentication/authorization in a RESTful web service while maintaining statelessness?

Javalin
1.	What is Javalin?
2.	What is Jetty? What is the relationship between Jetty and Javalin?
3.	What are Servlets and how are they related to Javalin?
4.	What is Object Mapping? What is Jackson?
	- How does Javalin convert JSON data to Java objects? And the other way around?
5.	How do you set up a Javalin application?
6.	What are Http Handlers in Javalin?
	1. What are different ways to set them up?
7.	What are Handler groups?
8.	What is the Context object? What is it an abstraction of?
	- How would you handle path params?
	- How would you handle query params?
	- How would you retrieve the request body
	- How would you map an endpoint?
	- How would you return infomation in the response body?
	- How would you set a status code for a response?